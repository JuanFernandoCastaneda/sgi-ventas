{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/ordenes/": {
      "get": {
        "tags": ["ordenes"],
        "summary": "Ver Ordenes",
        "description": "Endpoint para ver todas las órdenes registradas.\n\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: Una lista de órdenes.",
        "operationId": "ver_ordenes_ordenes__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "description": "Not Found", "descripción": "No encontrado" }
        }
      },
      "post": {
        "tags": ["ordenes"],
        "summary": "Crear Orden",
        "description": "Endpoint para crear una nueva orden.\n\n:param orden: Los detalles de la orden a crear.\n:type orden: OrdenConDetalle\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: La orden creada con sus productos.\n:rtype: OrdenConProductos\n:raise HTTPException: Si algún producto no existe.",
        "operationId": "crear_orden_ordenes__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrdenConDetalle" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrdenConProductos" }
              }
            }
          },
          "404": { "description": "Not Found", "descripción": "No encontrado" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ordenes/{id_orden}": {
      "get": {
        "tags": ["ordenes"],
        "summary": "Ver Orden Por Id",
        "description": "Endpoint para ver una orden específica junto con sus productos.\n\n:param id_orden: Identificador de la orden.\n:type id_orden: str\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: La orden con sus productos.\n:raise HTTPException: Si no se encuentra la orden.",
        "operationId": "ver_orden_por_id_ordenes__id_orden__get",
        "parameters": [
          {
            "name": "id_orden",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id Orden" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "descripción": "No encontrado", "description": "Not Found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ordenes"],
        "summary": "Reemplazar Orden",
        "description": "Endpoint para reemplazar los detalles de una orden existente.\n\n:param id_orden: Identificador de la orden.\n:type id_orden: str\n:param orden: Los nuevos detalles de la orden.\n:type orden: OrdenConDetalle\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: La orden actualizada.\n:raise HTTPException: Si no se encuentra la orden.",
        "operationId": "reemplazar_orden_ordenes__id_orden__put",
        "parameters": [
          {
            "name": "id_orden",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id Orden" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrdenConDetalle" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "descripción": "No encontrado", "description": "Not Found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ordenes"],
        "summary": "Eliminar Orden",
        "description": "Endpoint para eliminar una orden registrada.\n\n:param id_orden: Identificador de la orden.\n:type id_orden: str\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: True si la orden fue eliminada.\n:rtype: bool\n:raise HTTPException: Si no se encuentra la orden.",
        "operationId": "eliminar_orden_ordenes__id_orden__delete",
        "parameters": [
          {
            "name": "id_orden",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id Orden" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": { "descripción": "No encontrado", "description": "Not Found" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ordenes/{id_orden}/productos": {
      "get": {
        "tags": ["productos en órdenes"],
        "summary": "Ver Productos Orden",
        "description": "Endpoint para obtener todos los productos de una orden específica.\n\n:param id_orden: Identificador de la orden.\n:type id_orden: int\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: Lista de productos con sus cantidades asociadas a la orden.\n:rtype: list[CantidadProductoCarrito]\n:raises HTTPException: Si la orden no existe.",
        "operationId": "ver_productos_orden_ordenes__id_orden__productos_get",
        "parameters": [
          {
            "name": "id_orden",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id Orden" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CantidadProductoCarrito"
                  },
                  "title": "Response Ver Productos Orden Ordenes  Id Orden  Productos Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ordenes/{id_orden}/productos/{id_producto}": {
      "post": {
        "tags": ["productos en órdenes"],
        "summary": "Agregar Producto Orden",
        "description": "Endpoint para agregar un producto a una orden existente.\n\n:param id_orden: Identificador de la orden.\n:type id_orden: int\n:param id_producto: Identificador del producto.\n:type id_producto: int\n:param cantidad: La cantidad del producto a agregar.\n:type cantidad: int\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: El detalle de la orden con el producto agregado.\n:rtype: DetalleOrden\n:raises HTTPException: Si no existe la orden o el producto.",
        "operationId": "agregar_producto_orden_ordenes__id_orden__productos__id_producto__post",
        "parameters": [
          {
            "name": "id_orden",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id Orden" }
          },
          {
            "name": "id_producto",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id Producto" }
          },
          {
            "name": "cantidad",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "minimum": 0, "title": "Cantidad" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetalleOrden" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["productos en órdenes"],
        "summary": "Parchar Producto Orden",
        "description": "Endpoint para actualizar la cantidad de un producto en una orden existente.\n\n:param id_orden: Identificador de la orden.\n:type id_orden: int\n:param id_producto: Identificador del producto.\n:type id_producto: int\n:param cantidad_nueva: La nueva cantidad del producto en la orden.\n:type cantidad_nueva: int\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: El detalle de la orden actualizado.\n:rtype: DetalleOrden\n:raises HTTPException: Si no existe la orden o el producto.",
        "operationId": "parchar_producto_orden_ordenes__id_orden__productos__id_producto__patch",
        "parameters": [
          {
            "name": "id_orden",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id Orden" }
          },
          {
            "name": "id_producto",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id Producto" }
          },
          {
            "name": "cantidad_nueva",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "title": "Cantidad Nueva"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DetalleOrden" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/productos/": {
      "get": {
        "tags": ["productos"],
        "summary": "Ver Productos",
        "description": "Endpoint para ver todos los productos registrados.\n\n:param session: La dependencia de la sesión.\n:type session: SessionDep\n:return: Una lista de productos.",
        "operationId": "ver_productos_productos__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "404": {
            "description": "Not Found",
            "descripción": "Producto no encontrado"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CantidadProductoCarrito": {
        "properties": {
          "nombre": { "type": "string", "title": "Nombre" },
          "iva": { "type": "string", "title": "Iva", "default": "0" },
          "precio_sin_iva": { "type": "string", "title": "Precio Sin Iva" },
          "id": { "type": "integer", "title": "Id" },
          "cantidad": { "type": "integer", "title": "Cantidad" },
          "precio_con_iva": {
            "type": "string",
            "title": "Precio Con Iva",
            "readOnly": true
          },
          "valor_total_sin_iva": {
            "type": "string",
            "title": "Valor Total Sin Iva",
            "readOnly": true
          },
          "valor_total_con_iva": {
            "type": "string",
            "title": "Valor Total Con Iva",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "nombre",
          "precio_sin_iva",
          "id",
          "cantidad",
          "precio_con_iva",
          "valor_total_sin_iva",
          "valor_total_con_iva"
        ],
        "title": "CantidadProductoCarrito",
        "description": "Modelo que representa un producto en un carrito con su cantidad.\n\nExtiende de: ProductoBase\n\n:ivar id: Identificador único del producto.\n:ivar cantidad: Cantidad del producto en el carrito.\n:ivar valor_total_sin_iva: Valor total sin incluir IVA.\n:ivar valor_total_con_iva: Valor total incluyendo IVA."
      },
      "DetalleOrden": {
        "properties": {
          "id_producto": { "type": "integer", "title": "Id Producto" },
          "id_orden": { "type": "integer", "title": "Id Orden" },
          "cantidad": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Cantidad",
            "default": 0
          }
        },
        "type": "object",
        "required": ["id_producto", "id_orden"],
        "title": "DetalleOrden",
        "description": "Tabla en la base de datos que representa la cantidad de producto que se encargó en una orden.\n\nExtiende de: SQLModel\n\n:ivar id_producto: El identificador del producto.\n:ivar id_orden: El identificador de la orden.\n:ivar cantidad: La cantidad de producto que se encargó. Debe ser mayor o igual a 0."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "OrdenConDetalle": {
        "properties": {
          "observaciones": {
            "type": "string",
            "title": "Observaciones",
            "default": ""
          },
          "fecha_facturacion": {
            "type": "string",
            "format": "date-time",
            "title": "Fecha Facturacion",
            "default": "2025-04-28T09:23:47.975237"
          },
          "id_forma_pago": { "type": "integer", "title": "Id Forma Pago" },
          "descuento": {
            "anyOf": [
              { "type": "number", "maximum": 1.0, "minimum": 0.0 },
              { "type": "string" }
            ],
            "title": "Descuento",
            "default": "0"
          },
          "id": { "type": "integer", "title": "Id" },
          "detalles": {
            "items": { "$ref": "#/components/schemas/DetalleOrden" },
            "type": "array",
            "title": "Detalles",
            "default": []
          }
        },
        "type": "object",
        "required": ["id_forma_pago", "id"],
        "title": "OrdenConDetalle",
        "description": "Modelo que representa una orden con detalles.\n\nExtiende de: OrdenBase\n\n:ivar id: Identificador único de la orden.\n:ivar detalles: Lista de detalles asociados a la orden."
      },
      "OrdenConProductos": {
        "properties": {
          "observaciones": {
            "type": "string",
            "title": "Observaciones",
            "default": ""
          },
          "fecha_facturacion": {
            "type": "string",
            "format": "date-time",
            "title": "Fecha Facturacion",
            "default": "2025-04-28T09:23:47.975237"
          },
          "id_forma_pago": { "type": "integer", "title": "Id Forma Pago" },
          "descuento": {
            "type": "string",
            "title": "Descuento",
            "default": "0"
          },
          "id": { "type": "integer", "title": "Id" },
          "productos": {
            "items": { "$ref": "#/components/schemas/CantidadProductoCarrito" },
            "type": "array",
            "title": "Productos",
            "default": []
          },
          "subtotal_sin_iva": {
            "type": "string",
            "title": "Subtotal Sin Iva",
            "readOnly": true
          },
          "total_gravado_iva": {
            "type": "string",
            "title": "Total Gravado Iva",
            "readOnly": true
          },
          "total_no_gravado_iva": {
            "type": "string",
            "title": "Total No Gravado Iva",
            "readOnly": true
          },
          "total_iva": {
            "type": "string",
            "title": "Total Iva",
            "readOnly": true
          },
          "valor_total": {
            "type": "string",
            "title": "Valor Total",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id_forma_pago",
          "id",
          "subtotal_sin_iva",
          "total_gravado_iva",
          "total_no_gravado_iva",
          "total_iva",
          "valor_total"
        ],
        "title": "OrdenConProductos",
        "description": "Modelo que representa una orden con productos.\n\nExtiende de: OrdenBase\n\n:ivar id: Identificador único de la orden.\n:ivar productos: Lista de productos asociados a la orden.\n:ivar subtotal_sin_iva: Subtotal sin incluir IVA.\n:ivar total_gravado_iva: Total gravado con IVA.\n:ivar total_no_gravado_iva: Total no gravado con IVA.\n:ivar total_iva: Total del IVA aplicado.\n:ivar valor_total: Valor total de la orden después de aplicar el descuento."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
